"use strict";angular.module("myApp",["ngRoute","ngMaterial"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/songs",{templateUrl:"app/templates/songs.html",controller:"SongsCtrl"}).when("/albums",{templateUrl:"app/templates/albums.html",controller:"AlbumsCtrl"}).when("/results",{templateUrl:"app/templates/results.html",controller:"ResultsCtrl"}).otherwise({redirectTo:"/albums"})}]);var app=angular.module("myApp").service("dataService",["$http","$q",function($http,$q,ENV){var service={};return service.albumSongHash={},service.all_songs=[],service.albumsGet=function(){var deferred=$q.defer();return $http.get("api/all-albums",{cache:!0}).then(function(response){response.data.features.forEach(function(v){v.properties.selected=!1,service.albumSongHash[v.properties.title]={},service.albumSongHash[v.properties.title].selected=!1,service.albumSongHash[v.properties.title].songs=[]}),deferred.resolve(service.albumSongHash)},function(response){deferred.reject(response)}),deferred.promise},service.songsGet=function(){var deferred=$q.defer();return service.all_songs=[],$http.get("api/songs",{cache:!0}).then(function(response){response.data.features.forEach(function(s){var album=s.properties.album_title,song=s.properties.song_title;service.all_songs.push({title:song,id:s.properties.id,selected:!1}),service.albumSongHash[album].songs.push({label:song,id:s.properties.id,selected:!1})}),deferred.resolve(service.all_songs)},function(response){deferred.reject(response)}),deferred.promise},service.songVotesGet=function(){var deferred=$q.defer();return $http.get("api/song-votes",{cache:!1}).then(function(response){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},service.albumVotesGet=function(){var deferred=$q.defer();return $http.get("api/album-votes",{cache:!0}).then(function(response){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},service.vote=function(songId,roundId){var deferred=$q.defer(),data=JSON.stringify({song:songId,round:roundId});return $http.post("api/songs",data,{headers:{"Content-type":"application/json"}}).then(function(response){deferred.resolve(response)},function(response){deferred.reject(response)}),deferred.promise},service}]),app=angular.module("myApp").service("stateService",function($stateParams,$state,$http,$q,$rootScope){var stateService={};return stateService.isParam=function(paramName){var bool=$stateParams[paramName];return!!bool},stateService.isParamVal=function(paramName,val){return $stateParams[paramName]==val},stateService.isNotParam=function(paramName){var bool=$stateParams[paramName];return!bool},stateService.toggleParam=function(paramName){var bool=$stateParams[paramName];if(bool)delete $stateParams[paramName];else{for(var param in $stateParams)"open"===$stateParams[param]&&($stateParams[param]=null);$stateParams[paramName]="open"}var state=$state.current.name||"home";stateService.setState(state,$stateParams,!1)},stateService.openParam=function(paramName){var bool=$stateParams[paramName];if(!bool){for(var param in $stateParams)"open"===$stateParams[param]&&($stateParams[param]=null);$stateParams[paramName]="open";var state=$state.current.name||"home";stateService.setState(state,$stateParams,!1)}},stateService.closeParam=function(paramName){var bool=$stateParams[paramName];if(bool){delete $stateParams[paramName];var state=$state.current.name||"home";stateService.setState(state,$stateParams,!1)}},stateService.setParamWithVal=function(paramName,val){$stateParams[paramName]=val;var state=$state.current.name||"home";stateService.setState(state,$stateParams,!1)},stateService.setState=function(state,params,reload){reload?$state.go(state,params):$state.go(state,params,{notify:!1,reload:!1,location:"replace",inherit:!0}),$rootScope.$broadcast("route-update")},stateService});angular.module("myApp").controller("AlbumsCtrl",function($rootScope,$scope,$http,dataService){$scope.albumSongHash={},$scope.showSong=!1,$scope.test="",$scope.all_songs=[],$scope.searchText="",$rootScope.votes=[],$scope.toggleRight=$rootScope.buildToggler("right"),$scope.addSongToPanel=function(song){song.selected,console.log($rootScope.votes)},$scope.processSelection=function(){var selectedSongs=[];Object.keys($scope.albumSongHash).forEach(function(key){$scope.albumSongHash[key].songs.forEach(function(s){s.selected===!0&&selectedSongs.push(s)})}),$rootScope.songs=selectedSongs,$rootScope.$broadcast("song-vote",selectedSongs),console.log(selectedSongs)},$scope.$on("song-remove",function(evt,song){Object.keys($scope.albumSongHash).forEach(function(key){$scope.albumSongHash[key].songs.forEach(function(s){song.id===s.id&&(s.selected=!1)})}),$scope.processSelection()}),$scope.toggleSong=function(album){$scope.albumSongHash[album].selected=!$scope.albumSongHash[album].selected},$scope.vote=function(song){var promise=dataService.vote(song.id);promise.then(function(res){console.log(res)})["catch"](function(err){console.log(err)})};var promise=dataService.albumsGet();promise.then(function(response){return $scope.albumSongHash=response,dataService.songsGet()}).then(function(response){$scope.all_songs=response})}),angular.module("myApp").controller("MainCtrl",function($rootScope,$scope,$http,$timeout,$mdSidenav,$mdUtil,$mdBottomSheet,$log,dataService){$rootScope.buildToggler=function(navID){var debounceFn=$mdUtil.debounce(function(){$mdSidenav(navID).toggle().then(function(){$log.debug("toggle "+navID+" is done")})},200);return debounceFn},$scope.toggleLeft=$rootScope.buildToggler("left"),$scope.toggleRight=$rootScope.buildToggler("right"),$scope.votes=[],$scope.close=function(){$mdSidenav("left").close().then(function(){$log.debug("close LEFT is done")})},$scope.$on("song-vote",function(evt,song){$scope.votes=song}),$scope.removeSong=function(song){$rootScope.$broadcast("song-remove",song)},$scope.openMenu=function($mdOpenMenu,event){console.log("openMenu"),$mdOpenMenu(event)},$scope.items=[{name:"Hangout",icon:"hangout"},{name:"Mail",icon:"mail"},{name:"Message",icon:"message"},{name:"Copy",icon:"copy2"},{name:"Facebook",icon:"facebook"},{name:"Twitter",icon:"twitter"}],$scope.listItemClick=function($index){var clickedItem=$scope.items[$index];$mdBottomSheet.hide(clickedItem)},$rootScope.showListBottomSheet=function($event){$scope.alert="",$mdBottomSheet.show({templateUrl:"../templates/bottom-sheet-list-template.html",controller:"SubmissionCtrl",targetEvent:$event}).then(function(clickedItem){$scope.alert=clickedItem.name+" clicked!"})}}),angular.module("myApp").controller("ResultsCtrl",function($rootScope,$scope,$http,dataService,$window){function resizeAlbumVoteChart(data){isSong=!1,$(".chart").empty();var chart=d3.select(".chart").attr("width",width).attr("height",height);y.domain([0,d3.max(data,function(d){return d.votes})]);var barWidth=width/data.length,bar=chart.selectAll("g").data(data).enter().append("g");bar.attr("transform",function(d,i){return"translate("+i*barWidth+",0)"}),bar.transition().delay(function(d,i){return 150*i}).attr("transform",function(d,i){return"translate("+i*barWidth+",0)"}),bar.append("rect").attr("y",function(d){return y(d.votes)}).attr("height",function(d){return height-y(d.votes)}).attr("width",barWidth-1),bar.on("click",function(e,i){selectedAlbum=e.album;var rect=chart.selectAll("g");rect.transition().attr("transform","translate("+i*barWidth+",0)"),setTimeout(function(){createSongVoteChart(e.album,i*barWidth,!1)},200)}),bar.append("text").attr("x",barWidth/2).attr("y",function(d){return y(d.votes)+3}).attr("dy","1.75em").text(function(d){return d.votes})}function resizeSongVoteChart(start,album,dataArr){isSong=!0,$(".chart").empty();var chart=d3.select(".chart").attr("width",width).attr("height",height),data=dataArr.filter(function(v){return v.album==album});y.domain([0,d3.max(data,function(d){return d.votes})]);var barWidth=width/data.length,bar=chart.selectAll("g").data(data).enter().append("g").attr("transform",function(d,i){return"translate("+i*barWidth+",0)"});bar.transition().delay(function(d,i){return 150*i}).attr("transform",function(d,i){return"translate("+i*barWidth+",0)"}),bar.append("rect").attr("y",function(d){return y(d.votes)}).attr("height",function(d){return height-y(d.votes)}).attr("width",barWidth-1),bar.append("text").attr("x",barWidth/2).attr("y",function(d){return y(d.votes)+3}).attr("dy","1.75em").text(function(d){return d.song})}function createAlbumVoteChart(start){isSong=!1;var promise=dataService.albumVotesGet();promise.then(function(response){var data=[];response.features.forEach(function(v){data.push(v.properties),albumVoteData.push(v.properties)}),$(".chart").empty(),y.domain([0,d3.max(data,function(d){return d.votes})]);var barWidth=width/data.length,bar=chart.selectAll("g").data(data).enter().append("g");null==start?bar.attr("transform",function(d,i){return"translate("+i*barWidth+",0)"}):bar.attr("transform","translate("+start*barWidth+",0)"),bar.transition().delay(function(d,i){return 150*i}).attr("transform",function(d,i){return"translate("+i*barWidth+",0)"}),bar.append("rect").attr("y",function(d){return y(d.votes)}).attr("height",function(d){return height-y(d.votes)}).attr("width",barWidth-1),bar.on("click",function(e,i){selectedAlbum=e.album,songStartXAxis=i*barWidth;var rect=chart.selectAll("g");rect.transition().attr("transform","translate("+i*barWidth+",0)"),setTimeout(function(){createSongVoteChart(e.album,i*barWidth,!1)},200)}),bar.append("text").attr("x",barWidth/2).attr("y",function(d){return y(d.votes)+3}).attr("dy","1.75em").text(function(d){return d.album})})}function createSongVoteChart(album,start,redraw){isSong=!0;var promise=dataService.songVotesGet();promise.then(function(response){var dataArr=[];response.features.forEach(function(v){dataArr.push(v.properties),songData.push(v.properties)});var data=dataArr.filter(function(v){return v.album==album});$(".chart").empty(),y.domain([0,d3.max(data,function(d){return d.votes})]);var barWidth=width/data.length,bar=chart.selectAll("g").data(data).enter().append("g").attr("transform",function(d,i){return"translate("+start+",0)"});redraw?bar.attr("transform",function(d,i){return"translate("+i*barWidth+",0)"}):bar.transition().delay(function(d,i){return 150*i}).attr("transform",function(d,i){return"translate("+i*barWidth+",0)"}),bar.append("rect").attr("y",function(d){return y(d.votes)}).attr("height",function(d){return height-y(d.votes)}).attr("width",barWidth-1),bar.append("text").attr("text-anchor","middle").attr("x",barWidth/2).attr("y",function(d){return y(d.votes)+3}).attr("dy","1.75em").text(function(d){return d.song}),bar.on("click",function(d,i){})})}var songStartXAxis,width=.9*$window.outerWidth,height=.6*$window.outerHeight,selectedAlbum="",isSong=!1,y=(d3.scale.ordinal().rangeRoundBands([0,width],.1),d3.scale.linear().range([height,0])),chart=d3.select(".chart").attr("width",width).attr("height",height);angular.element($window).bind("resize",function(){width=.9*$window.outerWidth,height=.6*$window.outerHeight,isSong?resizeSongVoteChart(songStartXAxis,selectedAlbum,songData):resizeAlbumVoteChart(albumVoteData)});var albumVoteData=[],songData=[];createAlbumVoteChart(null)}),angular.module("myApp").controller("SongsCtrl",function($scope,$http,$rootScope,dataService){$scope.albumSongHash={},$scope.all_songs=[],$scope.searchText="",$scope.selections=[],$scope.selection="",$scope.selectSong=function(song){$scope.selection=song.title,-1==$scope.selections.indexOf(song.title)?$scope.selections.push(song.title):($scope.selections.splice($scope.selections.indexOf(song.title),1),$scope.selection="",$scope.removeSong(song.title))},$scope.removeSong=function(song){$scope.all_songs.forEach(function(v){v.title==song&&(v.selected=!1)})};var promise=dataService.albumsGet();promise.then(function(response){return $scope.albumSongHash=response,dataService.songsGet()}).then(function(response){$scope.all_songs=response})}),angular.module("myApp").controller("SubmissionCtrl",function($rootScope,$scope,$http,$mdBottomSheet,dataService,$window){});
//# sourceMappingURL=kanye.min.map